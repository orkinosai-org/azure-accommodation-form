{"version":3,"sources":["../src/components/MessageBarActions/useMessageBarActionsStyles.styles.ts"],"sourcesContent":["import { makeResetStyles, makeStyles, mergeClasses } from '@griffel/react';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport { tokens } from '@fluentui/react-theme';\nimport type { MessageBarActionsSlots, MessageBarActionsState } from './MessageBarActions.types';\n\nexport const messageBarActionsClassNames: SlotClassNames<MessageBarActionsSlots> = {\n  root: 'fui-MessageBarActions',\n  containerAction: 'fui-MessageBarActions__containerAction',\n};\n\n/**\n * Styles for the root slot\n */\nconst useRootBaseStyles = makeResetStyles({\n  gridArea: 'secondaryActions',\n  display: 'flex',\n  columnGap: tokens.spacingHorizontalM,\n  paddingRight: tokens.spacingHorizontalM,\n});\n\nconst useContainerActionBaseStyles = makeResetStyles({\n  gridArea: 'actions',\n  paddingRight: tokens.spacingHorizontalM,\n});\n\nconst useMultilineStyles = makeStyles({\n  root: {\n    justifyContent: 'end',\n    marginTop: tokens.spacingVerticalMNudge,\n    marginBottom: tokens.spacingVerticalS,\n    marginRight: '0px',\n    paddingRight: tokens.spacingVerticalM,\n  },\n\n  noActions: {\n    display: 'none',\n  },\n});\n\n/**\n * Apply styling to the MessageBarActions slots based on the state\n */\nexport const useMessageBarActionsStyles_unstable = (state: MessageBarActionsState): MessageBarActionsState => {\n  'use no memo';\n\n  const rootBaseStyles = useRootBaseStyles();\n  const containerActionBaseStyles = useContainerActionBaseStyles();\n  const multilineStyles = useMultilineStyles();\n  state.root.className = mergeClasses(\n    messageBarActionsClassNames.root,\n    rootBaseStyles,\n    state.layout === 'multiline' && multilineStyles.root,\n    !state.hasActions && multilineStyles.noActions,\n    state.root.className,\n  );\n\n  if (state.containerAction) {\n    state.containerAction.className = mergeClasses(\n      messageBarActionsClassNames.containerAction,\n      containerActionBaseStyles,\n      state.containerAction.className,\n    );\n  }\n\n  return state;\n};\n"],"names":["messageBarActionsClassNames","useMessageBarActionsStyles_unstable","root","containerAction","useRootBaseStyles","makeResetStyles","gridArea","display","columnGap","tokens","spacingHorizontalM","paddingRight","useContainerActionBaseStyles","useMultilineStyles","makeStyles","justifyContent","marginTop","spacingVerticalMNudge","marginBottom","spacingVerticalS","marginRight","spacingVerticalM","noActions","state","rootBaseStyles","containerActionBaseStyles","multilineStyles","className","mergeClasses","layout","hasActions"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAKaA,2BAAAA;eAAAA;;IAqCAC,mCAAAA;eAAAA;;;uBA1C6C;4BAEnC;AAGhB,MAAMD,8BAAsE;IACjFE,MAAM;IACNC,iBAAiB;AACnB;AAEA;;CAEC,GACD,MAAMC,oBAAoBC,IAAAA,sBAAAA,EAAgB;IACxCC,UAAU;IACVC,SAAS;IACTC,WAAWC,kBAAAA,CAAOC,kBAAkB;IACpCC,cAAcF,kBAAAA,CAAOC,kBAAkB;AACzC;AAEA,MAAME,+BAA+BP,IAAAA,sBAAAA,EAAgB;IACnDC,UAAU;IACVK,cAAcF,kBAAAA,CAAOC,kBAAkB;AACzC;AAEA,MAAMG,qBAAqBC,IAAAA,iBAAAA,EAAW;IACpCZ,MAAM;QACJa,gBAAgB;QAChBC,WAAWP,kBAAAA,CAAOQ,qBAAqB;QACvCC,cAAcT,kBAAAA,CAAOU,gBAAgB;QACrCC,aAAa;QACbT,cAAcF,kBAAAA,CAAOY,gBAAgB;IACvC;IAEAC,WAAW;QACTf,SAAS;IACX;AACF;AAKO,MAAMN,sCAAsC,CAACsB;IAClD;IAEA,MAAMC,iBAAiBpB;IACvB,MAAMqB,4BAA4Bb;IAClC,MAAMc,kBAAkBb;IACxBU,MAAMrB,IAAI,CAACyB,SAAS,GAAGC,IAAAA,mBAAAA,EACrB5B,4BAA4BE,IAAI,EAChCsB,gBACAD,MAAMM,MAAM,KAAK,eAAeH,gBAAgBxB,IAAI,EACpD,CAACqB,MAAMO,UAAU,IAAIJ,gBAAgBJ,SAAS,EAC9CC,MAAMrB,IAAI,CAACyB,SAAS;IAGtB,IAAIJ,MAAMpB,eAAe,EAAE;QACzBoB,MAAMpB,eAAe,CAACwB,SAAS,GAAGC,IAAAA,mBAAAA,EAChC5B,4BAA4BG,eAAe,EAC3CsB,2BACAF,MAAMpB,eAAe,CAACwB,SAAS;IAEnC;IAEA,OAAOJ;AACT"}
{"version":3,"sources":["../src/components/Checkbox/useCheckboxStyles.styles.ts"],"sourcesContent":["import { makeResetStyles, makeStyles, mergeClasses } from '@griffel/react';\nimport { createFocusOutlineStyle } from '@fluentui/react-tabster';\nimport { tokens } from '@fluentui/react-theme';\nimport { CheckboxSlots, CheckboxState } from './Checkbox.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\n\nexport const checkboxClassNames: SlotClassNames<CheckboxSlots> = {\n  root: 'fui-Checkbox',\n  label: 'fui-Checkbox__label',\n  input: 'fui-Checkbox__input',\n  indicator: 'fui-Checkbox__indicator',\n};\n\n// CSS variables used internally in Checkbox's styles\nconst vars = {\n  indicatorColor: '--fui-Checkbox__indicator--color',\n  indicatorBorderColor: '--fui-Checkbox__indicator--borderColor',\n  indicatorBackgroundColor: '--fui-Checkbox__indicator--backgroundColor',\n} as const;\n\n// The indicator size is used by the indicator and label styles\nconst indicatorSizeMedium = '16px';\nconst indicatorSizeLarge = '20px';\n\nconst useRootBaseClassName = makeResetStyles({\n  position: 'relative',\n  display: 'inline-flex',\n  cursor: 'pointer',\n  verticalAlign: 'middle',\n  color: tokens.colorNeutralForeground3,\n  ...createFocusOutlineStyle({ style: {}, selector: 'focus-within' }),\n});\n\nconst useRootStyles = makeStyles({\n  unchecked: {\n    ':hover': {\n      color: tokens.colorNeutralForeground2,\n      [vars.indicatorBorderColor]: tokens.colorNeutralStrokeAccessibleHover,\n    },\n\n    ':active': {\n      color: tokens.colorNeutralForeground1,\n      [vars.indicatorBorderColor]: tokens.colorNeutralStrokeAccessiblePressed,\n    },\n  },\n\n  checked: {\n    color: tokens.colorNeutralForeground1,\n    [vars.indicatorBackgroundColor]: tokens.colorCompoundBrandBackground,\n    [vars.indicatorColor]: tokens.colorNeutralForegroundInverted,\n    [vars.indicatorBorderColor]: tokens.colorCompoundBrandBackground,\n\n    ':hover': {\n      [vars.indicatorBackgroundColor]: tokens.colorCompoundBrandBackgroundHover,\n      [vars.indicatorBorderColor]: tokens.colorCompoundBrandBackgroundHover,\n    },\n\n    ':active': {\n      [vars.indicatorBackgroundColor]: tokens.colorCompoundBrandBackgroundPressed,\n      [vars.indicatorBorderColor]: tokens.colorCompoundBrandBackgroundPressed,\n    },\n  },\n\n  mixed: {\n    color: tokens.colorNeutralForeground1,\n    [vars.indicatorBorderColor]: tokens.colorCompoundBrandStroke,\n    [vars.indicatorColor]: tokens.colorCompoundBrandForeground1,\n\n    ':hover': {\n      [vars.indicatorBorderColor]: tokens.colorCompoundBrandStrokeHover,\n      [vars.indicatorColor]: tokens.colorCompoundBrandForeground1Hover,\n    },\n\n    ':active': {\n      [vars.indicatorBorderColor]: tokens.colorCompoundBrandStrokePressed,\n      [vars.indicatorColor]: tokens.colorCompoundBrandForeground1Pressed,\n    },\n  },\n\n  disabled: {\n    cursor: 'default',\n\n    color: tokens.colorNeutralForegroundDisabled,\n    [vars.indicatorBorderColor]: tokens.colorNeutralStrokeDisabled,\n    [vars.indicatorColor]: tokens.colorNeutralForegroundDisabled,\n\n    '@media (forced-colors: active)': {\n      color: 'GrayText',\n      [vars.indicatorColor]: 'GrayText',\n    },\n  },\n});\n\nconst useInputBaseClassName = makeResetStyles({\n  boxSizing: 'border-box',\n  cursor: 'inherit',\n  height: '100%',\n  margin: 0,\n  opacity: 0,\n  position: 'absolute',\n  top: 0,\n  // Calculate the width of the hidden input by taking into account the size of the indicator + the padding around it.\n  // This is done so that clicking on that \"empty space\" still toggles the checkbox.\n  width: `calc(${indicatorSizeMedium} + 2 * ${tokens.spacingHorizontalS})`,\n});\n\nconst useInputStyles = makeStyles({\n  before: {\n    right: 0,\n  },\n  after: {\n    left: 0,\n  },\n\n  large: {\n    width: `calc(${indicatorSizeLarge} + 2 * ${tokens.spacingHorizontalS})`,\n  },\n});\n\nconst useIndicatorBaseClassName = makeResetStyles({\n  alignSelf: 'flex-start',\n  boxSizing: 'border-box',\n  flexShrink: 0,\n\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  overflow: 'hidden',\n\n  color: `var(${vars.indicatorColor})`,\n  backgroundColor: `var(${vars.indicatorBackgroundColor})`,\n  borderColor: `var(${vars.indicatorBorderColor}, ${tokens.colorNeutralStrokeAccessible})`,\n  borderStyle: 'solid',\n  borderWidth: tokens.strokeWidthThin,\n  borderRadius: tokens.borderRadiusSmall,\n  margin: tokens.spacingVerticalS + ' ' + tokens.spacingHorizontalS,\n  fill: 'currentColor',\n  pointerEvents: 'none',\n\n  fontSize: '12px',\n  height: indicatorSizeMedium,\n  width: indicatorSizeMedium,\n});\n\nconst useIndicatorStyles = makeStyles({\n  large: {\n    fontSize: '16px',\n    height: indicatorSizeLarge,\n    width: indicatorSizeLarge,\n  },\n\n  circular: { borderRadius: tokens.borderRadiusCircular },\n});\n\n// Can't use makeResetStyles here because Label is a component that may itself use makeResetStyles.\nconst useLabelStyles = makeStyles({\n  base: {\n    alignSelf: 'center',\n    color: 'inherit',\n    cursor: 'inherit',\n    padding: `${tokens.spacingVerticalS} ${tokens.spacingHorizontalS}`,\n  },\n\n  before: {\n    paddingRight: tokens.spacingHorizontalXS,\n  },\n  after: {\n    paddingLeft: tokens.spacingHorizontalXS,\n  },\n\n  // Use a (negative) margin to account for the difference between the indicator's height and the label's line height.\n  // This prevents the label from expanding the height of the checkbox, but preserves line height if the label wraps.\n  medium: {\n    marginTop: `calc((${indicatorSizeMedium} - ${tokens.lineHeightBase300}) / 2)`,\n    marginBottom: `calc((${indicatorSizeMedium} - ${tokens.lineHeightBase300}) / 2)`,\n  },\n  large: {\n    marginTop: `calc((${indicatorSizeLarge} - ${tokens.lineHeightBase300}) / 2)`,\n    marginBottom: `calc((${indicatorSizeLarge} - ${tokens.lineHeightBase300}) / 2)`,\n  },\n});\n\n/**\n * Apply styling to the Checkbox slots based on the state\n */\nexport const useCheckboxStyles_unstable = (state: CheckboxState): CheckboxState => {\n  'use no memo';\n\n  const { checked, disabled, labelPosition, shape, size } = state;\n\n  const rootBaseClassName = useRootBaseClassName();\n  const rootStyles = useRootStyles();\n  state.root.className = mergeClasses(\n    checkboxClassNames.root,\n    rootBaseClassName,\n    disabled\n      ? rootStyles.disabled\n      : checked === 'mixed'\n      ? rootStyles.mixed\n      : checked\n      ? rootStyles.checked\n      : rootStyles.unchecked,\n    state.root.className,\n  );\n\n  const inputBaseClassName = useInputBaseClassName();\n  const inputStyles = useInputStyles();\n  state.input.className = mergeClasses(\n    checkboxClassNames.input,\n    inputBaseClassName,\n    size === 'large' && inputStyles.large,\n    inputStyles[labelPosition],\n    state.input.className,\n  );\n\n  const indicatorBaseClassName = useIndicatorBaseClassName();\n  const indicatorStyles = useIndicatorStyles();\n  if (state.indicator) {\n    state.indicator.className = mergeClasses(\n      checkboxClassNames.indicator,\n      indicatorBaseClassName,\n      size === 'large' && indicatorStyles.large,\n      shape === 'circular' && indicatorStyles.circular,\n      state.indicator.className,\n    );\n  }\n\n  const labelStyles = useLabelStyles();\n  if (state.label) {\n    state.label.className = mergeClasses(\n      checkboxClassNames.label,\n      labelStyles.base,\n      labelStyles[size],\n      labelStyles[labelPosition],\n      state.label.className,\n    );\n  }\n\n  return state;\n};\n"],"names":["checkboxClassNames","useCheckboxStyles_unstable","root","label","input","indicator","vars","indicatorColor","indicatorBorderColor","indicatorBackgroundColor","indicatorSizeMedium","indicatorSizeLarge","useRootBaseClassName","makeResetStyles","position","display","cursor","verticalAlign","color","tokens","colorNeutralForeground3","createFocusOutlineStyle","style","selector","useRootStyles","makeStyles","unchecked","colorNeutralForeground2","colorNeutralStrokeAccessibleHover","colorNeutralForeground1","colorNeutralStrokeAccessiblePressed","checked","colorCompoundBrandBackground","colorNeutralForegroundInverted","colorCompoundBrandBackgroundHover","colorCompoundBrandBackgroundPressed","mixed","colorCompoundBrandStroke","colorCompoundBrandForeground1","colorCompoundBrandStrokeHover","colorCompoundBrandForeground1Hover","colorCompoundBrandStrokePressed","colorCompoundBrandForeground1Pressed","disabled","colorNeutralForegroundDisabled","colorNeutralStrokeDisabled","useInputBaseClassName","boxSizing","height","margin","opacity","top","width","spacingHorizontalS","useInputStyles","before","right","after","left","large","useIndicatorBaseClassName","alignSelf","flexShrink","alignItems","justifyContent","overflow","backgroundColor","borderColor","colorNeutralStrokeAccessible","borderStyle","borderWidth","strokeWidthThin","borderRadius","borderRadiusSmall","spacingVerticalS","fill","pointerEvents","fontSize","useIndicatorStyles","circular","borderRadiusCircular","useLabelStyles","base","padding","paddingRight","spacingHorizontalXS","paddingLeft","medium","marginTop","lineHeightBase300","marginBottom","state","labelPosition","shape","size","rootBaseClassName","rootStyles","className","mergeClasses","inputBaseClassName","inputStyles","indicatorBaseClassName","indicatorStyles","labelStyles"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}
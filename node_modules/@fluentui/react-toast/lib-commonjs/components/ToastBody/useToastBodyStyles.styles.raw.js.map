{"version":3,"sources":["../src/components/ToastBody/useToastBodyStyles.styles.ts"],"sourcesContent":["import { makeResetStyles, makeStyles, mergeClasses } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nimport type { ToastBodySlots, ToastBodyState } from './ToastBody.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\n\nexport const toastBodyClassNames: SlotClassNames<ToastBodySlots> = {\n  root: 'fui-ToastBody',\n  subtitle: 'fui-ToastBody__subtitle',\n};\n\nconst useRootBaseClassName = makeResetStyles({\n  gridColumnStart: 2,\n  gridColumnEnd: 3,\n  paddingTop: '6px',\n  fontSize: tokens.fontSizeBase300,\n  lineHeight: tokens.fontSizeBase300,\n  fontWeight: tokens.fontWeightRegular,\n  color: tokens.colorNeutralForeground1,\n  wordBreak: 'break-word',\n});\n\nconst useSubtitleBaseClassName = makeResetStyles({\n  paddingTop: '4px',\n  gridColumnStart: 2,\n  gridColumnEnd: 3,\n  fontSize: tokens.fontSizeBase200,\n  lineHeight: tokens.fontSizeBase200,\n  fontWeight: tokens.fontWeightRegular,\n  color: tokens.colorNeutralForeground2,\n});\n\nconst useInvertedStyles = makeStyles({\n  root: {\n    color: tokens.colorNeutralForegroundInverted2,\n  },\n  subtitle: {\n    color: tokens.colorNeutralForegroundInverted2,\n  },\n});\n\n/**\n * Apply styling to the ToastBody slots based on the state\n */\nexport const useToastBodyStyles_unstable = (state: ToastBodyState): ToastBodyState => {\n  'use no memo';\n\n  const rootBaseClassName = useRootBaseClassName();\n  const subtitleBaseClassName = useSubtitleBaseClassName();\n  const invertedStyles = useInvertedStyles();\n  state.root.className = mergeClasses(\n    toastBodyClassNames.root,\n    rootBaseClassName,\n    state.backgroundAppearance === 'inverted' && invertedStyles.root,\n    state.root.className,\n  );\n\n  if (state.subtitle) {\n    state.subtitle.className = mergeClasses(\n      toastBodyClassNames.subtitle,\n      subtitleBaseClassName,\n      state.backgroundAppearance === 'inverted' && invertedStyles.subtitle,\n      state.subtitle.className,\n    );\n  }\n\n  return state;\n};\n"],"names":["toastBodyClassNames","useToastBodyStyles_unstable","root","subtitle","useRootBaseClassName","makeResetStyles","gridColumnStart","gridColumnEnd","paddingTop","fontSize","tokens","fontSizeBase300","lineHeight","fontWeight","fontWeightRegular","color","colorNeutralForeground1","wordBreak","useSubtitleBaseClassName","fontSizeBase200","colorNeutralForeground2","useInvertedStyles","makeStyles","colorNeutralForegroundInverted2","state","rootBaseClassName","subtitleBaseClassName","invertedStyles","className","mergeClasses","backgroundAppearance"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAKaA,mBAAAA;eAAAA;;IAsCAC,2BAAAA;eAAAA;;;uBA3C6C;4BACnC;AAIhB,MAAMD,sBAAsD;IACjEE,MAAM;IACNC,UAAU;AACZ;AAEA,MAAMC,uBAAuBC,IAAAA,sBAAAA,EAAgB;IAC3CC,iBAAiB;IACjBC,eAAe;IACfC,YAAY;IACZC,UAAUC,kBAAAA,CAAOC,eAAe;IAChCC,YAAYF,kBAAAA,CAAOC,eAAe;IAClCE,YAAYH,kBAAAA,CAAOI,iBAAiB;IACpCC,OAAOL,kBAAAA,CAAOM,uBAAuB;IACrCC,WAAW;AACb;AAEA,MAAMC,2BAA2Bb,IAAAA,sBAAAA,EAAgB;IAC/CG,YAAY;IACZF,iBAAiB;IACjBC,eAAe;IACfE,UAAUC,kBAAAA,CAAOS,eAAe;IAChCP,YAAYF,kBAAAA,CAAOS,eAAe;IAClCN,YAAYH,kBAAAA,CAAOI,iBAAiB;IACpCC,OAAOL,kBAAAA,CAAOU,uBAAuB;AACvC;AAEA,MAAMC,oBAAoBC,IAAAA,iBAAAA,EAAW;IACnCpB,MAAM;QACJa,OAAOL,kBAAAA,CAAOa,+BAA+B;IAC/C;IACApB,UAAU;QACRY,OAAOL,kBAAAA,CAAOa,+BAA+B;IAC/C;AACF;AAKO,MAAMtB,8BAA8B,CAACuB;IAC1C;IAEA,MAAMC,oBAAoBrB;IAC1B,MAAMsB,wBAAwBR;IAC9B,MAAMS,iBAAiBN;IACvBG,MAAMtB,IAAI,CAAC0B,SAAS,GAAGC,IAAAA,mBAAAA,EACrB7B,oBAAoBE,IAAI,EACxBuB,mBACAD,MAAMM,oBAAoB,KAAK,cAAcH,eAAezB,IAAI,EAChEsB,MAAMtB,IAAI,CAAC0B,SAAS;IAGtB,IAAIJ,MAAMrB,QAAQ,EAAE;QAClBqB,MAAMrB,QAAQ,CAACyB,SAAS,GAAGC,IAAAA,mBAAAA,EACzB7B,oBAAoBG,QAAQ,EAC5BuB,uBACAF,MAAMM,oBAAoB,KAAK,cAAcH,eAAexB,QAAQ,EACpEqB,MAAMrB,QAAQ,CAACyB,SAAS;IAE5B;IAEA,OAAOJ;AACT"}
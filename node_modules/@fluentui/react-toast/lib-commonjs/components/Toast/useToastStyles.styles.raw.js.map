{"version":3,"sources":["../src/components/Toast/useToastStyles.styles.ts"],"sourcesContent":["import { makeResetStyles, makeStyles, mergeClasses } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nimport type { ToastSlots, ToastState } from './Toast.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\n\nexport const toastClassNames: SlotClassNames<ToastSlots> = {\n  root: 'fui-Toast',\n};\n\nconst useRootBaseClassName = makeResetStyles({\n  display: 'grid',\n  gridTemplateColumns: 'auto 1fr auto',\n  padding: '12px',\n  borderRadius: tokens.borderRadiusMedium,\n  border: `1px solid ${tokens.colorTransparentStroke}`,\n  boxShadow: tokens.shadow8,\n  fontSize: tokens.fontSizeBase300,\n  lineHeight: '20px',\n  fontWeight: tokens.fontWeightSemibold,\n  color: tokens.colorNeutralForeground1,\n  backgroundColor: tokens.colorNeutralBackground1,\n});\n\nconst useStyles = makeStyles({\n  inverted: {\n    color: tokens.colorNeutralForegroundInverted2,\n    backgroundColor: tokens.colorNeutralBackgroundInverted,\n  },\n});\n\n/**\n * Apply styling to the Toast slots based on the state\n */\nexport const useToastStyles_unstable = (state: ToastState): ToastState => {\n  'use no memo';\n\n  const rootBaseClassName = useRootBaseClassName();\n  const styles = useStyles();\n  state.root.className = mergeClasses(\n    toastClassNames.root,\n    rootBaseClassName,\n    state.backgroundAppearance === 'inverted' && styles.inverted,\n    state.root.className,\n  );\n\n  return state;\n};\n"],"names":["toastClassNames","useToastStyles_unstable","root","useRootBaseClassName","makeResetStyles","display","gridTemplateColumns","padding","borderRadius","tokens","borderRadiusMedium","border","colorTransparentStroke","boxShadow","shadow8","fontSize","fontSizeBase300","lineHeight","fontWeight","fontWeightSemibold","color","colorNeutralForeground1","backgroundColor","colorNeutralBackground1","useStyles","makeStyles","inverted","colorNeutralForegroundInverted2","colorNeutralBackgroundInverted","state","rootBaseClassName","styles","className","mergeClasses","backgroundAppearance"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAKaA,eAAAA;eAAAA;;IA4BAC,uBAAAA;eAAAA;;;uBAjC6C;4BACnC;AAIhB,MAAMD,kBAA8C;IACzDE,MAAM;AACR;AAEA,MAAMC,uBAAuBC,IAAAA,sBAAAA,EAAgB;IAC3CC,SAAS;IACTC,qBAAqB;IACrBC,SAAS;IACTC,cAAcC,kBAAAA,CAAOC,kBAAkB;IACvCC,QAAQ,CAAC,UAAU,EAAEF,kBAAAA,CAAOG,sBAAsB,CAAC,CAAC;IACpDC,WAAWJ,kBAAAA,CAAOK,OAAO;IACzBC,UAAUN,kBAAAA,CAAOO,eAAe;IAChCC,YAAY;IACZC,YAAYT,kBAAAA,CAAOU,kBAAkB;IACrCC,OAAOX,kBAAAA,CAAOY,uBAAuB;IACrCC,iBAAiBb,kBAAAA,CAAOc,uBAAuB;AACjD;AAEA,MAAMC,YAAYC,IAAAA,iBAAAA,EAAW;IAC3BC,UAAU;QACRN,OAAOX,kBAAAA,CAAOkB,+BAA+B;QAC7CL,iBAAiBb,kBAAAA,CAAOmB,8BAA8B;IACxD;AACF;AAKO,MAAM3B,0BAA0B,CAAC4B;IACtC;IAEA,MAAMC,oBAAoB3B;IAC1B,MAAM4B,SAASP;IACfK,MAAM3B,IAAI,CAAC8B,SAAS,GAAGC,IAAAA,mBAAAA,EACrBjC,gBAAgBE,IAAI,EACpB4B,mBACAD,MAAMK,oBAAoB,KAAK,cAAcH,OAAOL,QAAQ,EAC5DG,MAAM3B,IAAI,CAAC8B,SAAS;IAGtB,OAAOH;AACT"}
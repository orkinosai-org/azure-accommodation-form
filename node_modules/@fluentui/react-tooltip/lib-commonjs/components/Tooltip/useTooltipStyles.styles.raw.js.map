{"version":3,"sources":["../src/components/Tooltip/useTooltipStyles.styles.ts"],"sourcesContent":["import { makeStyles, mergeClasses } from '@griffel/react';\nimport { createArrowStyles } from '@fluentui/react-positioning';\nimport { tokens } from '@fluentui/react-theme';\nimport { arrowHeight } from './private/constants';\nimport type { TooltipSlots, TooltipState } from './Tooltip.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\n\nexport const tooltipClassNames: SlotClassNames<TooltipSlots> = {\n  content: 'fui-Tooltip__content',\n};\n\n/**\n * Styles for the tooltip\n */\nconst useStyles = makeStyles({\n  root: {\n    display: 'none',\n    boxSizing: 'border-box',\n    maxWidth: '240px',\n    cursor: 'default',\n    fontFamily: tokens.fontFamilyBase,\n    fontSize: tokens.fontSizeBase200,\n    lineHeight: tokens.lineHeightBase200,\n    overflowWrap: 'break-word',\n    borderRadius: tokens.borderRadiusMedium,\n    border: `1px solid ${tokens.colorTransparentStroke}`,\n    padding: '4px 11px 6px 11px', // '5px 12px 7px 12px' minus the border width '1px'\n    backgroundColor: tokens.colorNeutralBackground1,\n    color: tokens.colorNeutralForeground1,\n\n    // TODO need to add versions of tokens.alias.shadow.shadow8, etc. that work with filter\n    filter:\n      `drop-shadow(0 0 2px ${tokens.colorNeutralShadowAmbient}) ` +\n      `drop-shadow(0 4px 8px ${tokens.colorNeutralShadowKey})`,\n  },\n\n  visible: {\n    display: 'block',\n  },\n\n  inverted: {\n    backgroundColor: tokens.colorNeutralBackgroundStatic,\n    color: tokens.colorNeutralForegroundStaticInverted,\n  },\n\n  arrow: createArrowStyles({ arrowHeight }),\n});\n\n/**\n * Apply styling to the Tooltip slots based on the state\n */\nexport const useTooltipStyles_unstable = (state: TooltipState): TooltipState => {\n  'use no memo';\n\n  const styles = useStyles();\n\n  state.content.className = mergeClasses(\n    tooltipClassNames.content,\n    styles.root,\n    state.appearance === 'inverted' && styles.inverted,\n    state.visible && styles.visible,\n    state.content.className,\n  );\n\n  state.arrowClassName = styles.arrow;\n\n  return state;\n};\n"],"names":["tooltipClassNames","useTooltipStyles_unstable","content","useStyles","makeStyles","root","display","boxSizing","maxWidth","cursor","fontFamily","tokens","fontFamilyBase","fontSize","fontSizeBase200","lineHeight","lineHeightBase200","overflowWrap","borderRadius","borderRadiusMedium","border","colorTransparentStroke","padding","backgroundColor","colorNeutralBackground1","color","colorNeutralForeground1","filter","colorNeutralShadowAmbient","colorNeutralShadowKey","visible","inverted","colorNeutralBackgroundStatic","colorNeutralForegroundStaticInverted","arrow","createArrowStyles","arrowHeight","state","styles","className","mergeClasses","appearance","arrowClassName"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAOaA,iBAAAA;eAAAA;;IA4CAC,yBAAAA;eAAAA;;;uBAnD4B;kCACP;4BACX;2BACK;AAIrB,MAAMD,oBAAkD;IAC7DE,SAAS;AACX;AAEA;;CAEC,GACD,MAAMC,YAAYC,IAAAA,iBAAAA,EAAW;IAC3BC,MAAM;QACJC,SAAS;QACTC,WAAW;QACXC,UAAU;QACVC,QAAQ;QACRC,YAAYC,kBAAAA,CAAOC,cAAc;QACjCC,UAAUF,kBAAAA,CAAOG,eAAe;QAChCC,YAAYJ,kBAAAA,CAAOK,iBAAiB;QACpCC,cAAc;QACdC,cAAcP,kBAAAA,CAAOQ,kBAAkB;QACvCC,QAAQ,CAAC,UAAU,EAAET,kBAAAA,CAAOU,sBAAsB,CAAC,CAAC;QACpDC,SAAS;QACTC,iBAAiBZ,kBAAAA,CAAOa,uBAAuB;QAC/CC,OAAOd,kBAAAA,CAAOe,uBAAuB;QAErC,uFAAuF;QACvFC,QACE,CAAC,oBAAoB,EAAEhB,kBAAAA,CAAOiB,yBAAyB,CAAC,EAAE,CAAC,GAC3D,CAAC,sBAAsB,EAAEjB,kBAAAA,CAAOkB,qBAAqB,CAAC,CAAC,CAAC;IAC5D;IAEAC,SAAS;QACPxB,SAAS;IACX;IAEAyB,UAAU;QACRR,iBAAiBZ,kBAAAA,CAAOqB,4BAA4B;QACpDP,OAAOd,kBAAAA,CAAOsB,oCAAoC;IACpD;IAEAC,OAAOC,IAAAA,mCAAAA,EAAkB;QAAEC,aAAAA,sBAAAA;IAAY;AACzC;AAKO,MAAMnC,4BAA4B,CAACoC;IACxC;IAEA,MAAMC,SAASnC;IAEfkC,MAAMnC,OAAO,CAACqC,SAAS,GAAGC,IAAAA,mBAAAA,EACxBxC,kBAAkBE,OAAO,EACzBoC,OAAOjC,IAAI,EACXgC,MAAMI,UAAU,KAAK,cAAcH,OAAOP,QAAQ,EAClDM,MAAMP,OAAO,IAAIQ,OAAOR,OAAO,EAC/BO,MAAMnC,OAAO,CAACqC,SAAS;IAGzBF,MAAMK,cAAc,GAAGJ,OAAOJ,KAAK;IAEnC,OAAOG;AACT"}
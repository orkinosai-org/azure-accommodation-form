{"version":3,"sources":["../src/components/ToolbarButton/useToolbarButtonStyles.styles.ts"],"sourcesContent":["import { makeStyles, mergeClasses } from '@griffel/react';\nimport { useButtonStyles_unstable } from '@fluentui/react-button';\nimport { ToolbarButtonState } from './ToolbarButton.types';\n\nconst useBaseStyles = makeStyles({\n  vertical: {\n    flexDirection: 'column',\n  },\n  verticalIcon: {\n    fontSize: '24px',\n    margin: '0',\n  },\n});\n\n/**\n * Apply styling to the ToolbarButton slots based on the state\n */\nexport const useToolbarButtonStyles_unstable = (state: ToolbarButtonState) => {\n  'use no memo';\n\n  const buttonStyles = useBaseStyles();\n\n  state.root.className = mergeClasses(state.vertical && buttonStyles.vertical, state.root.className);\n\n  if (state.icon) {\n    state.icon.className = mergeClasses(state.vertical && buttonStyles.verticalIcon, state.icon.className);\n  }\n\n  useButtonStyles_unstable(state);\n};\n"],"names":["useToolbarButtonStyles_unstable","useBaseStyles","makeStyles","vertical","flexDirection","verticalIcon","fontSize","margin","state","buttonStyles","root","className","mergeClasses","icon","useButtonStyles_unstable"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAiBaA;;;eAAAA;;;uBAjB4B;6BACA;AAGzC,MAAMC,gBAAgBC,IAAAA,iBAAAA,EAAW;IAC/BC,UAAU;QACRC,eAAe;IACjB;IACAC,cAAc;QACZC,UAAU;QACVC,QAAQ;IACV;AACF;AAKO,MAAMP,kCAAkC,CAACQ;IAC9C;IAEA,MAAMC,eAAeR;IAErBO,MAAME,IAAI,CAACC,SAAS,GAAGC,IAAAA,mBAAAA,EAAaJ,MAAML,QAAQ,IAAIM,aAAaN,QAAQ,EAAEK,MAAME,IAAI,CAACC,SAAS;IAEjG,IAAIH,MAAMK,IAAI,EAAE;QACdL,MAAMK,IAAI,CAACF,SAAS,GAAGC,IAAAA,mBAAAA,EAAaJ,MAAML,QAAQ,IAAIM,aAAaJ,YAAY,EAAEG,MAAMK,IAAI,CAACF,SAAS;IACvG;IAEAG,IAAAA,qCAAAA,EAAyBN;AAC3B"}
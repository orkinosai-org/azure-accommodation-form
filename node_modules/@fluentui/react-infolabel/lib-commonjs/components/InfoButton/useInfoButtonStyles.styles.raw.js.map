{"version":3,"sources":["../src/components/InfoButton/useInfoButtonStyles.styles.ts"],"sourcesContent":["import { createFocusOutlineStyle } from '@fluentui/react-tabster';\nimport { iconFilledClassName, iconRegularClassName } from '@fluentui/react-icons';\nimport { makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport { tokens, typographyStyles } from '@fluentui/react-theme';\nimport type { InfoButtonSlots, InfoButtonState } from './InfoButton.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\n\nexport const infoButtonClassNames: SlotClassNames<InfoButtonSlots> = {\n  root: 'fui-InfoButton',\n  // this className won't be used, but it's needed to satisfy the type checker\n  popover: 'fui-InfoButton__popover',\n  info: 'fui-InfoButton__info',\n};\n\n/**\n * Styles for the root slot\n */\nconst useButtonStyles = makeStyles({\n  base: {\n    alignItems: 'center',\n    boxSizing: 'border-box',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    textDecorationLine: 'none',\n    verticalAlign: 'middle',\n    position: 'relative',\n\n    backgroundColor: tokens.colorTransparentBackground,\n    color: tokens.colorNeutralForeground2,\n\n    ...shorthands.borderStyle('none'),\n    borderRadius: tokens.borderRadiusMedium,\n    margin: '0',\n    padding: `${tokens.spacingVerticalXS} ${tokens.spacingHorizontalXS}`,\n\n    [`& .${iconFilledClassName}`]: {\n      display: 'none',\n    },\n    [`& .${iconRegularClassName}`]: {\n      display: 'inline-flex',\n    },\n\n    ':hover': {\n      backgroundColor: tokens.colorTransparentBackgroundHover,\n      color: tokens.colorNeutralForeground2BrandHover,\n      cursor: 'pointer',\n\n      [`& .${iconFilledClassName}`]: {\n        display: 'inline-flex',\n      },\n      [`& .${iconRegularClassName}`]: {\n        display: 'none',\n      },\n    },\n    ':hover:active': {\n      backgroundColor: tokens.colorTransparentBackgroundPressed,\n      color: tokens.colorNeutralForeground2BrandPressed,\n    },\n  },\n\n  selected: {\n    backgroundColor: tokens.colorTransparentBackgroundSelected,\n    color: tokens.colorNeutralForeground2BrandSelected,\n\n    [`& .${iconFilledClassName}`]: {\n      display: 'inline-flex',\n    },\n    [`& .${iconRegularClassName}`]: {\n      display: 'none',\n    },\n\n    '@media (forced-colors: active)': {\n      backgroundColor: 'Highlight',\n      color: 'Canvas',\n    },\n  },\n\n  highContrast: {\n    '@media (forced-colors: active)': {\n      color: 'CanvasText',\n\n      ':hover,:hover:active': {\n        forcedColorAdjust: 'none',\n        backgroundColor: 'Highlight',\n        color: 'Canvas',\n      },\n    },\n  },\n\n  focusIndicator: createFocusOutlineStyle(),\n\n  large: {\n    padding: `${tokens.spacingVerticalXXS} ${tokens.spacingVerticalXXS}`,\n  },\n});\n\nconst usePopoverSurfaceStyles = makeStyles({\n  base: {\n    maxWidth: '264px',\n  },\n  smallMedium: typographyStyles.caption1,\n  large: typographyStyles.body1,\n});\n\n/**\n * Apply styling to the InfoButton slots based on the state\n */\nexport const useInfoButtonStyles_unstable = (state: InfoButtonState): InfoButtonState => {\n  'use no memo';\n\n  const { size } = state;\n  const { open } = state.popover;\n  const buttonStyles = useButtonStyles();\n  const popoverSurfaceStyles = usePopoverSurfaceStyles();\n\n  state.info.className = mergeClasses(\n    infoButtonClassNames.info,\n    popoverSurfaceStyles.base,\n    size === 'large' ? popoverSurfaceStyles.large : popoverSurfaceStyles.smallMedium,\n    state.info.className,\n  );\n\n  state.root.className = mergeClasses(\n    infoButtonClassNames.root,\n    buttonStyles.base,\n    buttonStyles.highContrast,\n    buttonStyles.focusIndicator,\n    open && buttonStyles.selected,\n    size === 'large' && buttonStyles.large,\n    state.root.className,\n  );\n\n  return state;\n};\n"],"names":["infoButtonClassNames","useInfoButtonStyles_unstable","root","popover","info","useButtonStyles","makeStyles","base","alignItems","boxSizing","display","justifyContent","textDecorationLine","verticalAlign","position","backgroundColor","tokens","colorTransparentBackground","color","colorNeutralForeground2","shorthands","borderStyle","borderRadius","borderRadiusMedium","margin","padding","spacingVerticalXS","spacingHorizontalXS","iconFilledClassName","iconRegularClassName","colorTransparentBackgroundHover","colorNeutralForeground2BrandHover","cursor","colorTransparentBackgroundPressed","colorNeutralForeground2BrandPressed","selected","colorTransparentBackgroundSelected","colorNeutralForeground2BrandSelected","highContrast","forcedColorAdjust","focusIndicator","createFocusOutlineStyle","large","spacingVerticalXXS","usePopoverSurfaceStyles","maxWidth","smallMedium","typographyStyles","caption1","body1","state","size","open","buttonStyles","popoverSurfaceStyles","className","mergeClasses"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}
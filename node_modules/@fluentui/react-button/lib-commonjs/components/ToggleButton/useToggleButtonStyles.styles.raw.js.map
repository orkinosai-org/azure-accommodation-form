{"version":3,"sources":["../src/components/ToggleButton/useToggleButtonStyles.styles.ts"],"sourcesContent":["import { iconFilledClassName, iconRegularClassName } from '@fluentui/react-icons';\nimport { createCustomFocusIndicatorStyle } from '@fluentui/react-tabster';\nimport { tokens } from '@fluentui/react-theme';\nimport { shorthands, mergeClasses, makeStyles } from '@griffel/react';\nimport { useButtonStyles_unstable } from '../Button/useButtonStyles.styles';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport type { ButtonSlots } from '../Button/Button.types';\nimport type { ToggleButtonState } from './ToggleButton.types';\n\nexport const toggleButtonClassNames: SlotClassNames<ButtonSlots> = {\n  root: 'fui-ToggleButton',\n  icon: 'fui-ToggleButton__icon',\n};\n\nconst useRootCheckedStyles = makeStyles({\n  // Base styles\n  base: {\n    backgroundColor: tokens.colorNeutralBackground1Selected,\n    ...shorthands.borderColor(tokens.colorNeutralStroke1),\n    color: tokens.colorNeutralForeground1Selected,\n\n    ...shorthands.borderWidth(tokens.strokeWidthThin),\n\n    [`& .${iconFilledClassName}`]: {\n      display: 'inline',\n    },\n    [`& .${iconRegularClassName}`]: {\n      display: 'none',\n    },\n\n    ':hover': {\n      backgroundColor: tokens.colorNeutralBackground1Hover,\n      ...shorthands.borderColor(tokens.colorNeutralStroke1Hover),\n      color: tokens.colorNeutralForeground1Hover,\n    },\n\n    ':hover:active': {\n      backgroundColor: tokens.colorNeutralBackground1Pressed,\n      ...shorthands.borderColor(tokens.colorNeutralStroke1Pressed),\n      color: tokens.colorNeutralForeground1Pressed,\n    },\n  },\n\n  // High contrast styles\n  highContrast: {\n    '@media (forced-colors: active)': {\n      backgroundColor: 'Highlight',\n      ...shorthands.borderColor('Highlight'),\n      color: 'HighlightText',\n      forcedColorAdjust: 'none',\n\n      ':hover': {\n        backgroundColor: 'HighlightText',\n        ...shorthands.borderColor('Highlight'),\n        color: 'Highlight',\n      },\n\n      ':hover:active': {\n        backgroundColor: 'HighlightText',\n        ...shorthands.borderColor('Highlight'),\n        color: 'Highlight',\n      },\n\n      ':focus': {\n        border: '1px solid HighlightText',\n        outlineColor: 'Highlight',\n      },\n    },\n  },\n\n  // Appearance variations\n  outline: {\n    backgroundColor: tokens.colorTransparentBackgroundSelected,\n    ...shorthands.borderColor(tokens.colorNeutralStroke1),\n    ...shorthands.borderWidth(tokens.strokeWidthThicker),\n\n    ':hover': {\n      backgroundColor: tokens.colorTransparentBackgroundHover,\n    },\n\n    ':hover:active': {\n      backgroundColor: tokens.colorTransparentBackgroundPressed,\n    },\n\n    ...createCustomFocusIndicatorStyle({\n      ...shorthands.borderColor(tokens.colorNeutralStroke1),\n    }),\n  },\n  primary: {\n    backgroundColor: tokens.colorBrandBackgroundSelected,\n    ...shorthands.borderColor('transparent'),\n    color: tokens.colorNeutralForegroundOnBrand,\n\n    ':hover': {\n      backgroundColor: tokens.colorBrandBackgroundHover,\n      ...shorthands.borderColor('transparent'),\n      color: tokens.colorNeutralForegroundOnBrand,\n    },\n\n    ':hover:active': {\n      backgroundColor: tokens.colorBrandBackgroundPressed,\n      ...shorthands.borderColor('transparent'),\n      color: tokens.colorNeutralForegroundOnBrand,\n    },\n  },\n  secondary: {\n    /* The secondary styles are exactly the same as the base styles. */\n  },\n  subtle: {\n    backgroundColor: tokens.colorSubtleBackgroundSelected,\n    ...shorthands.borderColor('transparent'),\n    color: tokens.colorNeutralForeground2Selected,\n\n    ':hover': {\n      backgroundColor: tokens.colorSubtleBackgroundHover,\n      ...shorthands.borderColor('transparent'),\n      color: tokens.colorNeutralForeground2Hover,\n    },\n\n    ':hover:active': {\n      backgroundColor: tokens.colorSubtleBackgroundPressed,\n      ...shorthands.borderColor('transparent'),\n      color: tokens.colorNeutralForeground2Pressed,\n    },\n  },\n  transparent: {\n    backgroundColor: tokens.colorTransparentBackgroundSelected,\n    ...shorthands.borderColor('transparent'),\n    color: tokens.colorNeutralForeground2BrandSelected,\n\n    ':hover': {\n      backgroundColor: tokens.colorTransparentBackgroundHover,\n      ...shorthands.borderColor('transparent'),\n      color: tokens.colorNeutralForeground2BrandHover,\n    },\n\n    ':hover:active': {\n      backgroundColor: tokens.colorTransparentBackgroundPressed,\n      ...shorthands.borderColor('transparent'),\n      color: tokens.colorNeutralForeground2BrandPressed,\n    },\n  },\n});\n\nconst useRootDisabledStyles = makeStyles({\n  // Base styles\n  base: {\n    backgroundColor: tokens.colorNeutralBackgroundDisabled,\n    ...shorthands.borderColor(tokens.colorNeutralStrokeDisabled),\n    color: tokens.colorNeutralForegroundDisabled,\n\n    ':hover': {\n      backgroundColor: tokens.colorNeutralBackgroundDisabled,\n      ...shorthands.borderColor(tokens.colorNeutralStrokeDisabled),\n      color: tokens.colorNeutralForegroundDisabled,\n    },\n\n    ':hover:active': {\n      backgroundColor: tokens.colorNeutralBackgroundDisabled,\n      ...shorthands.borderColor(tokens.colorNeutralStrokeDisabled),\n      color: tokens.colorNeutralForegroundDisabled,\n    },\n  },\n\n  // Appearance variations\n  outline: {\n    /* No styles */\n  },\n  primary: {\n    ...shorthands.borderColor('transparent'),\n\n    ':hover': {\n      ...shorthands.borderColor('transparent'),\n    },\n\n    ':hover:active': {\n      ...shorthands.borderColor('transparent'),\n    },\n  },\n  secondary: {\n    /* The secondary styles are exactly the same as the base styles. */\n  },\n  subtle: {\n    backgroundColor: tokens.colorTransparentBackground,\n    ...shorthands.borderColor('transparent'),\n\n    ':hover': {\n      backgroundColor: tokens.colorTransparentBackgroundHover,\n      ...shorthands.borderColor('transparent'),\n    },\n\n    ':hover:active': {\n      backgroundColor: tokens.colorTransparentBackgroundPressed,\n      ...shorthands.borderColor('transparent'),\n    },\n  },\n  transparent: {\n    backgroundColor: tokens.colorTransparentBackground,\n    ...shorthands.borderColor('transparent'),\n\n    ':hover': {\n      backgroundColor: tokens.colorTransparentBackgroundHover,\n      ...shorthands.borderColor('transparent'),\n    },\n\n    ':hover:active': {\n      backgroundColor: tokens.colorTransparentBackgroundPressed,\n      ...shorthands.borderColor('transparent'),\n    },\n  },\n});\n\nconst useIconCheckedStyles = makeStyles({\n  // Appearance variations\n  subtleOrTransparent: {\n    color: tokens.colorNeutralForeground2BrandSelected,\n  },\n  // High contrast styles\n  highContrast: {\n    '@media (forced-colors: active)': {\n      forcedColorAdjust: 'auto',\n    },\n  },\n});\n\nconst usePrimaryHighContrastStyles = makeStyles({\n  // Do not use primary variant high contrast styles for toggle buttons\n  // otherwise there isn't enough difference between on/off states\n  base: {\n    '@media (forced-colors: active)': {\n      backgroundColor: 'ButtonFace',\n      ...shorthands.borderColor('ButtonBorder'),\n      color: 'ButtonText',\n      forcedColorAdjust: 'auto',\n    },\n  },\n\n  disabled: {\n    '@media (forced-colors: active)': {\n      ...shorthands.borderColor('GrayText'),\n      color: 'GrayText',\n\n      ':focus': {\n        ...shorthands.borderColor('GrayText'),\n      },\n    },\n  },\n});\n\nexport const useToggleButtonStyles_unstable = (state: ToggleButtonState): ToggleButtonState => {\n  'use no memo';\n\n  const rootCheckedStyles = useRootCheckedStyles();\n  const rootDisabledStyles = useRootDisabledStyles();\n  const iconCheckedStyles = useIconCheckedStyles();\n  const primaryHighContrastStyles = usePrimaryHighContrastStyles();\n\n  const { appearance, checked, disabled, disabledFocusable } = state;\n\n  state.root.className = mergeClasses(\n    toggleButtonClassNames.root,\n\n    // Primary high contrast styles\n    appearance === 'primary' && primaryHighContrastStyles.base,\n    appearance === 'primary' && (disabled || disabledFocusable) && primaryHighContrastStyles.disabled,\n\n    // Checked styles\n    checked && rootCheckedStyles.base,\n    checked && rootCheckedStyles.highContrast,\n    appearance && checked && rootCheckedStyles[appearance],\n\n    // Disabled styles\n    (disabled || disabledFocusable) && rootDisabledStyles.base,\n    appearance && (disabled || disabledFocusable) && rootDisabledStyles[appearance],\n\n    // User provided class name\n    state.root.className,\n  );\n\n  if (state.icon) {\n    state.icon.className = mergeClasses(\n      toggleButtonClassNames.icon,\n      checked && (appearance === 'subtle' || appearance === 'transparent') && iconCheckedStyles.subtleOrTransparent,\n      iconCheckedStyles.highContrast,\n      state.icon.className,\n    );\n  }\n\n  useButtonStyles_unstable(state);\n\n  return state;\n};\n"],"names":["toggleButtonClassNames","useToggleButtonStyles_unstable","root","icon","useRootCheckedStyles","makeStyles","base","backgroundColor","tokens","colorNeutralBackground1Selected","shorthands","borderColor","colorNeutralStroke1","color","colorNeutralForeground1Selected","borderWidth","strokeWidthThin","iconFilledClassName","display","iconRegularClassName","colorNeutralBackground1Hover","colorNeutralStroke1Hover","colorNeutralForeground1Hover","colorNeutralBackground1Pressed","colorNeutralStroke1Pressed","colorNeutralForeground1Pressed","highContrast","forcedColorAdjust","border","outlineColor","outline","colorTransparentBackgroundSelected","strokeWidthThicker","colorTransparentBackgroundHover","colorTransparentBackgroundPressed","createCustomFocusIndicatorStyle","primary","colorBrandBackgroundSelected","colorNeutralForegroundOnBrand","colorBrandBackgroundHover","colorBrandBackgroundPressed","secondary","subtle","colorSubtleBackgroundSelected","colorNeutralForeground2Selected","colorSubtleBackgroundHover","colorNeutralForeground2Hover","colorSubtleBackgroundPressed","colorNeutralForeground2Pressed","transparent","colorNeutralForeground2BrandSelected","colorNeutralForeground2BrandHover","colorNeutralForeground2BrandPressed","useRootDisabledStyles","colorNeutralBackgroundDisabled","colorNeutralStrokeDisabled","colorNeutralForegroundDisabled","colorTransparentBackground","useIconCheckedStyles","subtleOrTransparent","usePrimaryHighContrastStyles","disabled","state","rootCheckedStyles","rootDisabledStyles","iconCheckedStyles","primaryHighContrastStyles","appearance","checked","disabledFocusable","className","mergeClasses","useButtonStyles_unstable"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}
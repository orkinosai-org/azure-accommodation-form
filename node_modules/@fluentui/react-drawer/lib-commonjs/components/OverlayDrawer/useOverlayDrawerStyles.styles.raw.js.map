{"version":3,"sources":["../src/components/OverlayDrawer/useOverlayDrawerStyles.styles.ts"],"sourcesContent":["import * as React from 'react';\nimport { makeResetStyles, makeStyles, mergeClasses } from '@griffel/react';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport { createFocusOutlineStyle } from '@fluentui/react-tabster';\n\nimport type { OverlayDrawerState } from './OverlayDrawer.types';\nimport { OverlayDrawerSurfaceSlots } from './OverlayDrawerSurface/OverlayDrawerSurface.types';\nimport { drawerCSSVars, drawerDefaultStyles, useDrawerBaseClassNames } from '../../shared/useDrawerBaseStyles.styles';\n\nexport const overlayDrawerClassNames: SlotClassNames<Omit<OverlayDrawerSurfaceSlots, 'backdropMotion'>> = {\n  root: 'fui-OverlayDrawer',\n  backdrop: 'fui-OverlayDrawer__backdrop',\n};\n\n/**\n * Styles for the root slot\n */\nconst useDrawerResetStyles = makeResetStyles({\n  ...createFocusOutlineStyle(),\n  ...drawerDefaultStyles,\n  position: 'fixed',\n  top: 0,\n  bottom: 0,\n});\n\nconst useDrawerRootStyles = makeStyles({\n  /* Positioning */\n  start: {},\n  end: {},\n  bottom: {\n    top: 'auto',\n    height: `var(${drawerCSSVars.drawerSizeVar})`,\n    width: '100vw',\n  },\n  absolute: {\n    position: 'absolute',\n  },\n});\n\n/**\n * Apply styling to the OverlayDrawer slots based on the state\n */\nexport const useOverlayDrawerStyles_unstable = (state: OverlayDrawerState): OverlayDrawerState => {\n  'use no memo';\n\n  const baseClassNames = useDrawerBaseClassNames(state);\n  const resetStyles = useDrawerResetStyles();\n  const rootStyles = useDrawerRootStyles();\n\n  const absoluteStyles = state.hasMountNodeElement && rootStyles.absolute;\n  const backdrop = state.root.backdrop as React.HTMLAttributes<HTMLDivElement> | undefined;\n\n  state.root.className = mergeClasses(\n    overlayDrawerClassNames.root,\n    baseClassNames,\n    resetStyles,\n    rootStyles[state.position],\n    absoluteStyles,\n    state.root.className,\n  );\n\n  if (backdrop) {\n    backdrop.className = mergeClasses(overlayDrawerClassNames.backdrop, absoluteStyles, backdrop.className);\n  }\n\n  return state;\n};\n"],"names":["overlayDrawerClassNames","useOverlayDrawerStyles_unstable","root","backdrop","useDrawerResetStyles","makeResetStyles","createFocusOutlineStyle","drawerDefaultStyles","position","top","bottom","useDrawerRootStyles","makeStyles","start","end","height","drawerCSSVars","drawerSizeVar","width","absolute","state","baseClassNames","useDrawerBaseClassNames","resetStyles","rootStyles","absoluteStyles","hasMountNodeElement","className","mergeClasses"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IASaA,uBAAAA;eAAAA;;IAiCAC,+BAAAA;eAAAA;;;;iEA1CU;wBACmC;8BAElB;2CAIoC;AAErE,MAAMD,0BAA6F;IACxGE,MAAM;IACNC,UAAU;AACZ;AAEA;;CAEC,GACD,MAAMC,uBAAuBC,IAAAA,uBAAAA,EAAgB;IAC3C,GAAGC,IAAAA,qCAAAA,GAAyB;IAC5B,GAAGC,8CAAmB;IACtBC,UAAU;IACVC,KAAK;IACLC,QAAQ;AACV;AAEA,MAAMC,sBAAsBC,IAAAA,kBAAAA,EAAW;IACrC,eAAe,GACfC,OAAO,CAAC;IACRC,KAAK,CAAC;IACNJ,QAAQ;QACND,KAAK;QACLM,QAAQ,CAAC,IAAI,EAAEC,wCAAAA,CAAcC,aAAa,CAAC,CAAC,CAAC;QAC7CC,OAAO;IACT;IACAC,UAAU;QACRX,UAAU;IACZ;AACF;AAKO,MAAMP,kCAAkC,CAACmB;IAC9C;IAEA,MAAMC,iBAAiBC,IAAAA,kDAAAA,EAAwBF;IAC/C,MAAMG,cAAcnB;IACpB,MAAMoB,aAAab;IAEnB,MAAMc,iBAAiBL,MAAMM,mBAAmB,IAAIF,WAAWL,QAAQ;IACvE,MAAMhB,WAAWiB,MAAMlB,IAAI,CAACC,QAAQ;IAEpCiB,MAAMlB,IAAI,CAACyB,SAAS,GAAGC,IAAAA,oBAAAA,EACrB5B,wBAAwBE,IAAI,EAC5BmB,gBACAE,aACAC,UAAU,CAACJ,MAAMZ,QAAQ,CAAC,EAC1BiB,gBACAL,MAAMlB,IAAI,CAACyB,SAAS;IAGtB,IAAIxB,UAAU;QACZA,SAASwB,SAAS,GAAGC,IAAAA,oBAAAA,EAAa5B,wBAAwBG,QAAQ,EAAEsB,gBAAgBtB,SAASwB,SAAS;IACxG;IAEA,OAAOP;AACT"}
{"version":3,"sources":["../src/components/DrawerHeader/useDrawerHeaderStyles.styles.ts"],"sourcesContent":["import { makeResetStyles, makeStyles, mergeClasses } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\n\nimport { drawerSeparatorStyles } from '../../shared/drawerSeparatorStyles';\n\nimport type { DrawerHeaderSlots, DrawerHeaderState } from './DrawerHeader.types';\n\nexport const drawerHeaderClassNames: SlotClassNames<DrawerHeaderSlots> = {\n  root: 'fui-DrawerHeader',\n};\n\n/**\n * Styles for the root slot\n */\nconst useStyles = makeResetStyles({\n  width: '100%',\n  maxWidth: '100%',\n  padding: `${tokens.spacingVerticalXXL} ${tokens.spacingHorizontalXXL} ${tokens.spacingVerticalS}`,\n  gap: tokens.spacingHorizontalS,\n  alignSelf: 'stretch',\n  display: 'flex',\n  flexDirection: 'column',\n  boxSizing: 'border-box',\n  position: 'relative',\n  zIndex: 2,\n});\n\nconst useDrawerHeaderStyles = makeStyles({\n  separator: {\n    '::after': {\n      ...drawerSeparatorStyles,\n      bottom: 0,\n    },\n  },\n\n  separatorVisible: {\n    '::after': {\n      opacity: 1,\n    },\n  },\n});\n\n/**\n * Apply styling to the DrawerHeader slots based on the state\n */\nexport const useDrawerHeaderStyles_unstable = (state: DrawerHeaderState): DrawerHeaderState => {\n  'use no memo';\n\n  const styles = useStyles();\n  const rootStyles = useDrawerHeaderStyles();\n\n  state.root.className = mergeClasses(\n    drawerHeaderClassNames.root,\n    styles,\n    state.scrollState !== 'none' && rootStyles.separator,\n    ['middle', 'bottom'].includes(state.scrollState) && rootStyles.separatorVisible,\n    state.root.className,\n  );\n\n  return state;\n};\n"],"names":["drawerHeaderClassNames","useDrawerHeaderStyles_unstable","root","useStyles","makeResetStyles","width","maxWidth","padding","tokens","spacingVerticalXXL","spacingHorizontalXXL","spacingVerticalS","gap","spacingHorizontalS","alignSelf","display","flexDirection","boxSizing","position","zIndex","useDrawerHeaderStyles","makeStyles","separator","drawerSeparatorStyles","bottom","separatorVisible","opacity","state","styles","rootStyles","className","mergeClasses","scrollState","includes"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAQaA,sBAAAA;eAAAA;;IAsCAC,8BAAAA;eAAAA;;;uBA9C6C;4BACnC;uCAGe;AAI/B,MAAMD,yBAA4D;IACvEE,MAAM;AACR;AAEA;;CAEC,GACD,MAAMC,YAAYC,IAAAA,sBAAAA,EAAgB;IAChCC,OAAO;IACPC,UAAU;IACVC,SAAS,CAAC,EAAEC,kBAAAA,CAAOC,kBAAkB,CAAC,CAAC,EAAED,kBAAAA,CAAOE,oBAAoB,CAAC,CAAC,EAAEF,kBAAAA,CAAOG,gBAAgB,CAAC,CAAC;IACjGC,KAAKJ,kBAAAA,CAAOK,kBAAkB;IAC9BC,WAAW;IACXC,SAAS;IACTC,eAAe;IACfC,WAAW;IACXC,UAAU;IACVC,QAAQ;AACV;AAEA,MAAMC,wBAAwBC,IAAAA,iBAAAA,EAAW;IACvCC,WAAW;QACT,WAAW;YACT,GAAGC,4CAAqB;YACxBC,QAAQ;QACV;IACF;IAEAC,kBAAkB;QAChB,WAAW;YACTC,SAAS;QACX;IACF;AACF;AAKO,MAAMzB,iCAAiC,CAAC0B;IAC7C;IAEA,MAAMC,SAASzB;IACf,MAAM0B,aAAaT;IAEnBO,MAAMzB,IAAI,CAAC4B,SAAS,GAAGC,IAAAA,mBAAAA,EACrB/B,uBAAuBE,IAAI,EAC3B0B,QACAD,MAAMK,WAAW,KAAK,UAAUH,WAAWP,SAAS,EACpD;QAAC;QAAU;KAAS,CAACW,QAAQ,CAACN,MAAMK,WAAW,KAAKH,WAAWJ,gBAAgB,EAC/EE,MAAMzB,IAAI,CAAC4B,SAAS;IAGtB,OAAOH;AACT"}
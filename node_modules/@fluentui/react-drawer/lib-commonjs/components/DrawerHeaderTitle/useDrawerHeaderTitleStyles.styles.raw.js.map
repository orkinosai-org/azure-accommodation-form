{"version":3,"sources":["../src/components/DrawerHeaderTitle/useDrawerHeaderTitleStyles.styles.ts"],"sourcesContent":["import { makeStyles, mergeClasses } from '@griffel/react';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport { useDialogTitleStyles_unstable } from '@fluentui/react-dialog';\nimport { tokens } from '@fluentui/react-theme';\n\nimport type { DrawerHeaderTitleSlots, DrawerHeaderTitleState } from './DrawerHeaderTitle.types';\n\nexport const drawerHeaderTitleClassNames: SlotClassNames<DrawerHeaderTitleSlots> = {\n  root: 'fui-DrawerHeaderTitle',\n  heading: 'fui-DrawerHeaderTitle__heading',\n  action: 'fui-DrawerHeaderTitle__action',\n};\n\n/**\n * Styles for the root slot\n */\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    columnGap: tokens.spacingHorizontalS,\n  },\n\n  action: {\n    marginRight: `calc(${tokens.spacingHorizontalS} * -1)`,\n  },\n});\n\n/**\n * Apply styling to the DrawerHeaderTitle slots based on the state\n */\nexport const useDrawerHeaderTitleStyles_unstable = (state: DrawerHeaderTitleState): DrawerHeaderTitleState => {\n  'use no memo';\n\n  const styles = useStyles();\n\n  const {\n    heading: root = {},\n    action,\n    // We should not use components to pass along the base element type of a slot\n    // but there's no way to retrieve the element type of a slot from the slot definition\n    // right now without using SLOT_ELEMENT_TYPE_SYMBOL\n    // TODO: create a method to retrieve the element type of a slot\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    components,\n  } = state;\n\n  useDialogTitleStyles_unstable({\n    components: {\n      root: components.heading,\n      action: components.action,\n    },\n    root,\n    action,\n  });\n\n  state.root.className = mergeClasses(drawerHeaderTitleClassNames.root, styles.root, state.root.className);\n\n  if (state.heading) {\n    state.heading.className = mergeClasses(drawerHeaderTitleClassNames.heading, state.heading.className);\n  }\n\n  if (state.action) {\n    state.action.className = mergeClasses(drawerHeaderTitleClassNames.action, styles.action, state.action.className);\n  }\n\n  return state;\n};\n"],"names":["drawerHeaderTitleClassNames","useDrawerHeaderTitleStyles_unstable","root","heading","action","useStyles","makeStyles","display","justifyContent","alignItems","columnGap","tokens","spacingHorizontalS","marginRight","state","styles","components","useDialogTitleStyles_unstable","className","mergeClasses"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAOaA,2BAAAA;eAAAA;;IAyBAC,mCAAAA;eAAAA;;;uBAhC4B;6BAEK;4BACvB;AAIhB,MAAMD,8BAAsE;IACjFE,MAAM;IACNC,SAAS;IACTC,QAAQ;AACV;AAEA;;CAEC,GACD,MAAMC,YAAYC,IAAAA,iBAAAA,EAAW;IAC3BJ,MAAM;QACJK,SAAS;QACTC,gBAAgB;QAChBC,YAAY;QACZC,WAAWC,kBAAAA,CAAOC,kBAAkB;IACtC;IAEAR,QAAQ;QACNS,aAAa,CAAC,KAAK,EAAEF,kBAAAA,CAAOC,kBAAkB,CAAC,MAAM,CAAC;IACxD;AACF;AAKO,MAAMX,sCAAsC,CAACa;IAClD;IAEA,MAAMC,SAASV;IAEf,MAAM,EACJF,SAASD,OAAO,CAAC,CAAC,EAClBE,MAAM,EAEN,qFAAqF;IACrF,mDAAmD;IACnD,+DAA+D;IAC/D,4DAA4D;IAC5DY,UAAU,EACX,GAAGF;IAEJG,IAAAA,0CAAAA,EAA8B;QAC5BD,YAAY;YACVd,MAAMc,WAAWb,OAAO;YACxBC,QAAQY,WAAWZ,MAAM;QAC3B;QACAF;QACAE;IACF;IAEAU,MAAMZ,IAAI,CAACgB,SAAS,GAAGC,IAAAA,mBAAAA,EAAanB,4BAA4BE,IAAI,EAAEa,OAAOb,IAAI,EAAEY,MAAMZ,IAAI,CAACgB,SAAS;IAEvG,IAAIJ,MAAMX,OAAO,EAAE;QACjBW,MAAMX,OAAO,CAACe,SAAS,GAAGC,IAAAA,mBAAAA,EAAanB,4BAA4BG,OAAO,EAAEW,MAAMX,OAAO,CAACe,SAAS;IACrG;IAEA,IAAIJ,MAAMV,MAAM,EAAE;QAChBU,MAAMV,MAAM,CAACc,SAAS,GAAGC,IAAAA,mBAAAA,EAAanB,4BAA4BI,MAAM,EAAEW,OAAOX,MAAM,EAAEU,MAAMV,MAAM,CAACc,SAAS;IACjH;IAEA,OAAOJ;AACT"}
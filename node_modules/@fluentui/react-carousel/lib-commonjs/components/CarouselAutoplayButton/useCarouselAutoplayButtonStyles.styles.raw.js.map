{"version":3,"sources":["../src/components/CarouselAutoplayButton/useCarouselAutoplayButtonStyles.styles.ts"],"sourcesContent":["import { makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport type { CarouselAutoplayButtonSlots, CarouselAutoplayButtonState } from './CarouselAutoplayButton.types';\nimport { useToggleButtonStyles_unstable } from '@fluentui/react-button';\nimport { tokens } from '@fluentui/react-theme';\n\nexport const carouselAutoplayButtonClassNames: SlotClassNames<CarouselAutoplayButtonSlots> = {\n  root: 'fui-CarouselAutoplayButton',\n  icon: 'fui-CarouselAutoplayButton__icon',\n};\n\n/**\n * Styles for the root slot\n */\nconst useStyles = makeStyles({\n  root: {\n    pointerEvents: 'all',\n    marginTop: 'auto',\n    marginBottom: 'auto',\n    ...shorthands.borderColor(tokens.colorTransparentStroke),\n    color: tokens.colorNeutralForeground2,\n    backgroundColor: tokens.colorNeutralBackgroundAlpha,\n    ':hover': {\n      cursor: 'pointer',\n    },\n  },\n\n  // TODO add additional classes for different states and/or slots\n});\n\n/**\n * Apply styling to the CarouselAutoplayButton slots based on the state\n */\nexport const useCarouselAutoplayButtonStyles_unstable = (\n  state: CarouselAutoplayButtonState,\n): CarouselAutoplayButtonState => {\n  'use no memo';\n\n  const styles = useStyles();\n\n  useToggleButtonStyles_unstable(state);\n\n  state.root.className = mergeClasses(carouselAutoplayButtonClassNames.root, styles.root, state.root.className);\n\n  if (state.icon) {\n    state.icon.className = mergeClasses(carouselAutoplayButtonClassNames.icon, state.icon.className);\n  }\n\n  return state;\n};\n"],"names":["carouselAutoplayButtonClassNames","useCarouselAutoplayButtonStyles_unstable","root","icon","useStyles","makeStyles","pointerEvents","marginTop","marginBottom","shorthands","borderColor","tokens","colorTransparentStroke","color","colorNeutralForeground2","backgroundColor","colorNeutralBackgroundAlpha","cursor","state","styles","useToggleButtonStyles_unstable","className","mergeClasses"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAMaA,gCAAAA;eAAAA;;IA2BAC,wCAAAA;eAAAA;;;uBAjCwC;6BAGN;4BACxB;AAEhB,MAAMD,mCAAgF;IAC3FE,MAAM;IACNC,MAAM;AACR;AAEA;;CAEC,GACD,MAAMC,YAAYC,IAAAA,iBAAAA,EAAW;IAC3BH,MAAM;QACJI,eAAe;QACfC,WAAW;QACXC,cAAc;QACd,GAAGC,iBAAAA,CAAWC,WAAW,CAACC,kBAAAA,CAAOC,sBAAsB,CAAC;QACxDC,OAAOF,kBAAAA,CAAOG,uBAAuB;QACrCC,iBAAiBJ,kBAAAA,CAAOK,2BAA2B;QACnD,UAAU;YACRC,QAAQ;QACV;IACF;AAGF;AAKO,MAAMhB,2CAA2C,CACtDiB;IAEA;IAEA,MAAMC,SAASf;IAEfgB,IAAAA,2CAAAA,EAA+BF;IAE/BA,MAAMhB,IAAI,CAACmB,SAAS,GAAGC,IAAAA,mBAAAA,EAAatB,iCAAiCE,IAAI,EAAEiB,OAAOjB,IAAI,EAAEgB,MAAMhB,IAAI,CAACmB,SAAS;IAE5G,IAAIH,MAAMf,IAAI,EAAE;QACde,MAAMf,IAAI,CAACkB,SAAS,GAAGC,IAAAA,mBAAAA,EAAatB,iCAAiCG,IAAI,EAAEe,MAAMf,IAAI,CAACkB,SAAS;IACjG;IAEA,OAAOH;AACT"}
{"version":3,"sources":["../src/components/CarouselNavImageButton/useCarouselNavImageButtonStyles.styles.ts"],"sourcesContent":["import { makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport type { CarouselNavImageButtonSlots, CarouselNavImageButtonState } from './CarouselNavImageButton.types';\nimport { tokens } from '@fluentui/react-theme';\n\nexport const carouselNavImageButtonClassNames: SlotClassNames<CarouselNavImageButtonSlots> = {\n  root: 'fui-CarouselNavImageButton',\n  image: 'fui-CarouselNavImageButton__image',\n};\n\nconst imageButtonSize = 40;\nconst selectedImageButtonSize = 48;\n\n/**\n * Styles for the root slot\n */\nconst useStyles = makeStyles({\n  root: {\n    boxSizing: 'content-box',\n    padding: '0px',\n    margin: `0 ${tokens.spacingHorizontalXS}`,\n    ...shorthands.borderColor(tokens.colorTransparentStroke),\n    borderRadius: tokens.borderRadiusSmall,\n    width: imageButtonSize + 'px',\n    height: imageButtonSize + 'px',\n    overflow: 'hidden',\n    ':hover': {\n      cursor: 'pointer',\n    },\n  },\n  image: {\n    width: imageButtonSize + 'px',\n    height: imageButtonSize + 'px',\n    borderRadius: tokens.borderRadiusSmall,\n  },\n  selected: {\n    width: selectedImageButtonSize + 'px',\n    height: selectedImageButtonSize + 'px',\n  },\n});\n\n/**\n * Apply styling to the CarouselNavImageButton slots based on the state\n */\nexport const useCarouselNavImageButtonStyles_unstable = (\n  state: CarouselNavImageButtonState,\n): CarouselNavImageButtonState => {\n  'use no memo';\n\n  const { selected } = state;\n  const styles = useStyles();\n\n  state.root.className = mergeClasses(\n    carouselNavImageButtonClassNames.root,\n    styles.root,\n    selected && styles.selected,\n    state.root.className,\n  );\n\n  if (state.image) {\n    state.image.className = mergeClasses(\n      carouselNavImageButtonClassNames.image,\n      styles.image,\n      selected && styles.selected,\n      state.image?.className,\n    );\n  }\n\n  return state;\n};\n"],"names":["carouselNavImageButtonClassNames","useCarouselNavImageButtonStyles_unstable","root","image","imageButtonSize","selectedImageButtonSize","useStyles","makeStyles","boxSizing","padding","margin","tokens","spacingHorizontalXS","shorthands","borderColor","colorTransparentStroke","borderRadius","borderRadiusSmall","width","height","overflow","cursor","selected","state","styles","className","mergeClasses"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAKaA,gCAAAA;eAAAA;;IAuCAC,wCAAAA;eAAAA;;;uBA5CwC;4BAG9B;AAEhB,MAAMD,mCAAgF;IAC3FE,MAAM;IACNC,OAAO;AACT;AAEA,MAAMC,kBAAkB;AACxB,MAAMC,0BAA0B;AAEhC;;CAEC,GACD,MAAMC,YAAYC,IAAAA,iBAAAA,EAAW;IAC3BL,MAAM;QACJM,WAAW;QACXC,SAAS;QACTC,QAAQ,CAAC,EAAE,EAAEC,kBAAAA,CAAOC,mBAAmB,CAAC,CAAC;QACzC,GAAGC,iBAAAA,CAAWC,WAAW,CAACH,kBAAAA,CAAOI,sBAAsB,CAAC;QACxDC,cAAcL,kBAAAA,CAAOM,iBAAiB;QACtCC,OAAOd,kBAAkB;QACzBe,QAAQf,kBAAkB;QAC1BgB,UAAU;QACV,UAAU;YACRC,QAAQ;QACV;IACF;IACAlB,OAAO;QACLe,OAAOd,kBAAkB;QACzBe,QAAQf,kBAAkB;QAC1BY,cAAcL,kBAAAA,CAAOM,iBAAiB;IACxC;IACAK,UAAU;QACRJ,OAAOb,0BAA0B;QACjCc,QAAQd,0BAA0B;IACpC;AACF;AAKO,MAAMJ,2CAA2C,CACtDsB;IAEA;IAEA,MAAM,EAAED,QAAQ,EAAE,GAAGC;IACrB,MAAMC,SAASlB;IAEfiB,MAAMrB,IAAI,CAACuB,SAAS,GAAGC,IAAAA,mBAAAA,EACrB1B,iCAAiCE,IAAI,EACrCsB,OAAOtB,IAAI,EACXoB,YAAYE,OAAOF,QAAQ,EAC3BC,MAAMrB,IAAI,CAACuB,SAAS;IAGtB,IAAIF,MAAMpB,KAAK,EAAE;YAKboB;QAJFA,MAAMpB,KAAK,CAACsB,SAAS,GAAGC,IAAAA,mBAAAA,EACtB1B,iCAAiCG,KAAK,EACtCqB,OAAOrB,KAAK,EACZmB,YAAYE,OAAOF,QAAQ,EAAA,AAC3BC,CAAAA,eAAAA,MAAMpB,KAAK,AAALA,MAAK,QAAXoB,iBAAAA,KAAAA,IAAAA,KAAAA,IAAAA,aAAaE,SAAS;IAE1B;IAEA,OAAOF;AACT"}
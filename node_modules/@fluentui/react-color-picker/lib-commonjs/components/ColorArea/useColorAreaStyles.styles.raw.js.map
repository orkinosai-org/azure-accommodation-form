{"version":3,"sources":["../src/components/ColorArea/useColorAreaStyles.styles.ts"],"sourcesContent":["import { makeResetStyles, makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport { tokens } from '@fluentui/react-theme';\nimport { createFocusOutlineStyle } from '@fluentui/react-tabster';\nimport type { ColorAreaSlots, ColorAreaState } from './ColorArea.types';\n\nexport const colorAreaClassNames: SlotClassNames<ColorAreaSlots> = {\n  root: 'fui-ColorArea',\n  thumb: 'fui-ColorArea__thumb',\n  inputX: 'fui-ColorArea__inputX',\n  inputY: 'fui-ColorArea__inputY',\n};\n\nexport const colorAreaCSSVars = {\n  areaXProgressVar: `--fui-AreaX--progress`,\n  areaYProgressVar: `--fui-AreaY--progress`,\n  thumbColorVar: `--fui-Area__thumb--color`,\n  mainColorVar: `--fui-Area--main-color`,\n};\n\n// Internal CSS variables\nconst thumbSizeVar = `--fui-Slider__thumb--size`;\n\n/**\n * Styles for the root slot\n */\nconst useRootStyles = makeResetStyles({\n  position: 'relative',\n  border: `1px solid ${tokens.colorNeutralStroke1}`,\n  background: `linear-gradient(to bottom, transparent, #000), linear-gradient(to right, #fff, transparent), var(${colorAreaCSSVars.mainColorVar})`,\n  forcedColorAdjust: 'none',\n  display: 'inline-grid',\n  touchAction: 'none',\n  alignItems: 'start',\n  justifyItems: 'start',\n  [thumbSizeVar]: '20px',\n  minWidth: '300px',\n  minHeight: '300px',\n  boxSizing: 'border-box',\n  marginBottom: tokens.spacingVerticalSNudge,\n});\n\n/**\n * Styles for the thumb slot\n */\nconst useThumbStyles = makeStyles({\n  thumb: {\n    position: 'absolute',\n    width: `var(${thumbSizeVar})`,\n    height: `var(${thumbSizeVar})`,\n    pointerEvents: 'none',\n    outlineStyle: 'none',\n    forcedColorAdjust: 'none',\n    borderRadius: tokens.borderRadiusCircular,\n    border: `${tokens.strokeWidthThin} solid ${tokens.colorNeutralForeground4}`,\n    boxShadow: tokens.shadow4,\n    backgroundColor: `var(${colorAreaCSSVars.thumbColorVar})`,\n    transform: 'translate(-50%, 50%)',\n    left: `var(${colorAreaCSSVars.areaXProgressVar})`,\n    bottom: `var(${colorAreaCSSVars.areaYProgressVar})`,\n    '::before': {\n      position: 'absolute',\n      inset: '0px',\n      borderRadius: tokens.borderRadiusCircular,\n      boxSizing: 'border-box',\n      content: \"''\",\n      border: `${tokens.strokeWidthThick} solid ${tokens.colorNeutralBackground1}`,\n    },\n  },\n  focusIndicator: createFocusOutlineStyle({\n    selector: 'focus-within',\n    style: {\n      outlineWidth: tokens.strokeWidthThick,\n      ...shorthands.borderWidth(tokens.strokeWidthThick),\n      outlineRadius: tokens.borderRadiusCircular,\n    },\n  }),\n});\n\n/**\n * Styles for the Input slot\n */\nconst useInputStyles = makeStyles({\n  input: {\n    overflow: 'hidden',\n    position: 'absolute',\n    pointerEvents: 'none',\n    top: 0,\n    left: 0,\n    opacity: 0,\n    padding: '0',\n    margin: '0',\n    width: '100%',\n    height: '100%',\n  },\n});\n\nconst useShapeStyles = makeStyles({\n  rounded: {\n    borderRadius: tokens.borderRadiusMedium,\n  },\n  square: {\n    borderRadius: tokens.borderRadiusNone,\n  },\n});\n\n/**\n * Apply styling to the ColorArea slots based on the state\n */\nexport const useColorAreaStyles_unstable = (state: ColorAreaState): ColorAreaState => {\n  'use no memo';\n\n  const rootStyles = useRootStyles();\n  const thumbStyles = useThumbStyles();\n  const inputStyles = useInputStyles();\n  const shapeStyles = useShapeStyles();\n\n  state.root.className = mergeClasses(\n    colorAreaClassNames.root,\n    rootStyles,\n    shapeStyles[state.shape || 'rounded'],\n    state.root.className,\n  );\n\n  state.thumb.className = mergeClasses(\n    colorAreaClassNames.thumb,\n    thumbStyles.thumb,\n    thumbStyles.focusIndicator,\n    state.thumb.className,\n  );\n\n  state.inputX.className = mergeClasses(colorAreaClassNames.inputX, inputStyles.input, state.inputX.className);\n\n  state.inputY.className = mergeClasses(colorAreaClassNames.inputY, inputStyles.input, state.inputY.className);\n  return state;\n};\n"],"names":["colorAreaCSSVars","colorAreaClassNames","useColorAreaStyles_unstable","root","thumb","inputX","inputY","areaXProgressVar","areaYProgressVar","thumbColorVar","mainColorVar","thumbSizeVar","useRootStyles","makeResetStyles","position","border","tokens","colorNeutralStroke1","background","forcedColorAdjust","display","touchAction","alignItems","justifyItems","minWidth","minHeight","boxSizing","marginBottom","spacingVerticalSNudge","useThumbStyles","makeStyles","width","height","pointerEvents","outlineStyle","borderRadius","borderRadiusCircular","strokeWidthThin","colorNeutralForeground4","boxShadow","shadow4","backgroundColor","transform","left","bottom","inset","content","strokeWidthThick","colorNeutralBackground1","focusIndicator","createFocusOutlineStyle","selector","style","outlineWidth","shorthands","borderWidth","outlineRadius","useInputStyles","input","overflow","top","opacity","padding","margin","useShapeStyles","rounded","borderRadiusMedium","square","borderRadiusNone","state","rootStyles","thumbStyles","inputStyles","shapeStyles","className","mergeClasses","shape"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}
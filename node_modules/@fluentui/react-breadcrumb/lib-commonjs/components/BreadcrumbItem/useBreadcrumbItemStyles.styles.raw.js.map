{"version":3,"sources":["../src/components/BreadcrumbItem/useBreadcrumbItemStyles.styles.ts"],"sourcesContent":["import { makeResetStyles, mergeClasses } from '@griffel/react';\nimport type { BreadcrumbItemSlots, BreadcrumbItemState } from './BreadcrumbItem.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport { tokens } from '@fluentui/react-theme';\n\nexport const breadcrumbItemClassNames: SlotClassNames<BreadcrumbItemSlots> = {\n  root: 'fui-BreadcrumbItem',\n};\n\nconst useBreadcrumbItemResetStyles = makeResetStyles({\n  display: 'flex',\n  alignItems: 'center',\n  color: tokens.colorNeutralForeground2,\n  boxSizing: 'border-box',\n  textWrap: 'nowrap',\n});\n\n/**\n * Apply styling to the BreadcrumbItem slots based on the state\n */\nexport const useBreadcrumbItemStyles_unstable = (state: BreadcrumbItemState): BreadcrumbItemState => {\n  'use no memo';\n\n  const resetStyles = useBreadcrumbItemResetStyles();\n\n  state.root.className = mergeClasses(breadcrumbItemClassNames.root, resetStyles, state.root.className);\n\n  return state;\n};\n"],"names":["breadcrumbItemClassNames","useBreadcrumbItemStyles_unstable","root","useBreadcrumbItemResetStyles","makeResetStyles","display","alignItems","color","tokens","colorNeutralForeground2","boxSizing","textWrap","state","resetStyles","className","mergeClasses"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAKaA,wBAAAA;eAAAA;;IAeAC,gCAAAA;eAAAA;;;uBApBiC;4BAGvB;AAEhB,MAAMD,2BAAgE;IAC3EE,MAAM;AACR;AAEA,MAAMC,+BAA+BC,IAAAA,sBAAAA,EAAgB;IACnDC,SAAS;IACTC,YAAY;IACZC,OAAOC,kBAAAA,CAAOC,uBAAuB;IACrCC,WAAW;IACXC,UAAU;AACZ;AAKO,MAAMV,mCAAmC,CAACW;IAC/C;IAEA,MAAMC,cAAcV;IAEpBS,MAAMV,IAAI,CAACY,SAAS,GAAGC,IAAAA,mBAAAA,EAAaf,yBAAyBE,IAAI,EAAEW,aAAaD,MAAMV,IAAI,CAACY,SAAS;IAEpG,OAAOF;AACT"}
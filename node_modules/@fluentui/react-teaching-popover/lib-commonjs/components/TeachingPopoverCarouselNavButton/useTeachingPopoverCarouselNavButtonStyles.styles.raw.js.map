{"version":3,"sources":["../src/components/TeachingPopoverCarouselNavButton/useTeachingPopoverCarouselNavButtonStyles.styles.ts"],"sourcesContent":["import { makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport type {\n  TeachingPopoverCarouselNavButtonSlots,\n  TeachingPopoverCarouselNavButtonState,\n} from './TeachingPopoverCarouselNavButton.types';\nimport { tokens } from '@fluentui/react-theme';\nimport { createCustomFocusIndicatorStyle } from '@fluentui/react-tabster';\n\nexport const teachingPopoverCarouselNavButtonClassNames: SlotClassNames<TeachingPopoverCarouselNavButtonSlots> = {\n  root: 'fui-TeachingPopoverCarouselNavButton',\n};\n\n/**\n * Styles for the root slot\n */\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    cursor: 'pointer',\n    boxSizing: 'border-box',\n    height: '8px',\n    width: '8px',\n    backgroundColor: tokens.colorBrandBackground,\n  },\n  rootUnselected: {\n    border: 'none',\n    borderRadius: '50%',\n    padding: '0px',\n    outline: `${tokens.strokeWidthThin} solid transparent`, // For high contrast\n    ...createCustomFocusIndicatorStyle({\n      outline: `${tokens.strokeWidthThick} solid ${tokens.colorStrokeFocus2}`,\n      borderRadius: tokens.borderRadiusMedium,\n      ...shorthands.borderColor('transparent'),\n    }),\n    backgroundColor: `color-mix(in srgb, ${tokens.colorBrandBackground} 30%, transparent)`,\n    '@supports not (color: color-mix(in lch, white, black))': {\n      // This will also affect the focus border, but only in older unsupported browsers\n      opacity: 0.3,\n      backgroundColor: tokens.colorBrandBackground,\n    },\n  },\n  rootSelected: {\n    outline: `${tokens.strokeWidthThin} solid transparent`, // For high contrast\n    width: '16px',\n    border: 'none',\n    borderRadius: '4px',\n    padding: '0px',\n    ...createCustomFocusIndicatorStyle({\n      outline: `${tokens.strokeWidthThick} solid ${tokens.colorStrokeFocus2}`,\n      borderRadius: tokens.borderRadiusMedium,\n      ...shorthands.borderColor('transparent'),\n    }),\n    '@media (forced-colors: active)': {\n      backgroundColor: 'CanvasText',\n    },\n  },\n  rootBrand: {\n    backgroundColor: tokens.colorNeutralForegroundOnBrand,\n  },\n  rootBrandUnselected: {\n    backgroundColor: `color-mix(in srgb, ${tokens.colorNeutralForegroundOnBrand} 30%, transparent)`,\n    '@supports not (color: color-mix(in lch, white, black))': {\n      // This will also affect the focus border, but only in older unsupported browsers\n      opacity: 0.3,\n      backgroundColor: tokens.colorBrandBackground,\n    },\n  },\n});\n\n/**\n * Apply styling to the TeachingPopoverCarouselNavButton slots based on the state\n */\nexport const useTeachingPopoverCarouselNavButtonStyles_unstable = (\n  state: TeachingPopoverCarouselNavButtonState,\n): TeachingPopoverCarouselNavButtonState => {\n  'use no memo';\n\n  const styles = useStyles();\n  const { appearance, isSelected } = state;\n\n  const brandStyles = isSelected ? styles.rootBrand : styles.rootBrandUnselected;\n\n  state.root.className = mergeClasses(\n    teachingPopoverCarouselNavButtonClassNames.root,\n    styles.root,\n    isSelected ? styles.rootSelected : styles.rootUnselected,\n    appearance === 'brand' && brandStyles,\n    state.root.className,\n  );\n\n  return state;\n};\n"],"names":["teachingPopoverCarouselNavButtonClassNames","useTeachingPopoverCarouselNavButtonStyles_unstable","root","useStyles","makeStyles","display","cursor","boxSizing","height","width","backgroundColor","tokens","colorBrandBackground","rootUnselected","border","borderRadius","padding","outline","strokeWidthThin","createCustomFocusIndicatorStyle","strokeWidthThick","colorStrokeFocus2","borderRadiusMedium","shorthands","borderColor","opacity","rootSelected","rootBrand","colorNeutralForegroundOnBrand","rootBrandUnselected","state","styles","appearance","isSelected","brandStyles","className","mergeClasses"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IASaA,0CAAAA;eAAAA;;IAgEAC,kDAAAA;eAAAA;;;uBAzEwC;4BAM9B;8BACyB;AAEzC,MAAMD,6CAAoG;IAC/GE,MAAM;AACR;AAEA;;CAEC,GACD,MAAMC,YAAYC,IAAAA,iBAAAA,EAAW;IAC3BF,MAAM;QACJG,SAAS;QACTC,QAAQ;QACRC,WAAW;QACXC,QAAQ;QACRC,OAAO;QACPC,iBAAiBC,kBAAAA,CAAOC,oBAAoB;IAC9C;IACAC,gBAAgB;QACdC,QAAQ;QACRC,cAAc;QACdC,SAAS;QACTC,SAAS,CAAC,EAAEN,kBAAAA,CAAOO,eAAe,CAAC,kBAAkB,CAAC;QACtD,GAAGC,IAAAA,6CAAAA,EAAgC;YACjCF,SAAS,CAAC,EAAEN,kBAAAA,CAAOS,gBAAgB,CAAC,OAAO,EAAET,kBAAAA,CAAOU,iBAAiB,CAAC,CAAC;YACvEN,cAAcJ,kBAAAA,CAAOW,kBAAkB;YACvC,GAAGC,iBAAAA,CAAWC,WAAW,CAAC,cAAc;QAC1C,EAAE;QACFd,iBAAiB,CAAC,mBAAmB,EAAEC,kBAAAA,CAAOC,oBAAoB,CAAC,kBAAkB,CAAC;QACtF,0DAA0D;YACxD,iFAAiF;YACjFa,SAAS;YACTf,iBAAiBC,kBAAAA,CAAOC,oBAAoB;QAC9C;IACF;IACAc,cAAc;QACZT,SAAS,CAAC,EAAEN,kBAAAA,CAAOO,eAAe,CAAC,kBAAkB,CAAC;QACtDT,OAAO;QACPK,QAAQ;QACRC,cAAc;QACdC,SAAS;QACT,GAAGG,IAAAA,6CAAAA,EAAgC;YACjCF,SAAS,CAAC,EAAEN,kBAAAA,CAAOS,gBAAgB,CAAC,OAAO,EAAET,kBAAAA,CAAOU,iBAAiB,CAAC,CAAC;YACvEN,cAAcJ,kBAAAA,CAAOW,kBAAkB;YACvC,GAAGC,iBAAAA,CAAWC,WAAW,CAAC,cAAc;QAC1C,EAAE;QACF,kCAAkC;YAChCd,iBAAiB;QACnB;IACF;IACAiB,WAAW;QACTjB,iBAAiBC,kBAAAA,CAAOiB,6BAA6B;IACvD;IACAC,qBAAqB;QACnBnB,iBAAiB,CAAC,mBAAmB,EAAEC,kBAAAA,CAAOiB,6BAA6B,CAAC,kBAAkB,CAAC;QAC/F,0DAA0D;YACxD,iFAAiF;YACjFH,SAAS;YACTf,iBAAiBC,kBAAAA,CAAOC,oBAAoB;QAC9C;IACF;AACF;AAKO,MAAMX,qDAAqD,CAChE6B;IAEA;IAEA,MAAMC,SAAS5B;IACf,MAAM,EAAE6B,UAAU,EAAEC,UAAU,EAAE,GAAGH;IAEnC,MAAMI,cAAcD,aAAaF,OAAOJ,SAAS,GAAGI,OAAOF,mBAAmB;IAE9EC,MAAM5B,IAAI,CAACiC,SAAS,GAAGC,IAAAA,mBAAAA,EACrBpC,2CAA2CE,IAAI,EAC/C6B,OAAO7B,IAAI,EACX+B,aAAaF,OAAOL,YAAY,GAAGK,OAAOlB,cAAc,EACxDmB,eAAe,WAAWE,aAC1BJ,MAAM5B,IAAI,CAACiC,SAAS;IAGtB,OAAOL;AACT"}